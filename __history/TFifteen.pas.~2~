unit TFifteen;

interface

uses
  WinTypes, WinProcs, Messages, Classes, Graphics, Controls,
  ExtCtrls, SysUtils, Dialogs;

type
  TMyFifteen = class(TGraphicControl)
  private
    procedure FormCreate(Sender: TObject);
    procedure FormMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure FormPaint(Sender: TObject);
    procedure Move(CellCol,CellRow: integer);
    procedure ShowField;
    procedure Mixer;
    procedure NewGame;
    function Finish: boolean;
  const
    RowCount = 4; ColCount = 4; // размер пол€
    RowSize = 64; ColSize = 64;
  var
    EmptCol, EmptRow:integer; // координаты пустой клетки
    Field: array[0..RowCount-1, 0..ColCount-1] of integer; // игровое поле
  public

  end;
procedure register;

implementation

// нова€ игра
procedure TMyFifteen.NewGame;
var
  i,j: integer;
begin
  // исходное (правильное) положение
  for i:=0 to RowCount-1 do
    for j:=0 to ColCount-1 do
      Field[i,j] := j+1+i*ColCount;
  Field[RowCount-1, ColCount-1]:=0;
  Mixer;    // перемешать фишки
  ShowField; // отобразить поле
end;

// провер€ет, расположены ли
// фишки в нужном пор€дке
function TMyFifteen.Finish: Boolean;
var
  Row,Col: integer;
  i: integer;
begin
  Row :=0; Col :=0;
  Finish := True; // пусть фишки в нужном пор€дке
  for i:=1 to RowCount*ColCount-1 do
  begin
    if Field[Row,Col] <> i then
    begin
      Result:= False;
      Break;
    end;
    // к следующей клетке
    if Col < ColCount-1 then
      Inc(col)
    else
    begin
      Col :=0;
      Inc(Row);
    end;
  end;
end;


// перемещение кост€шки в соседнюю пустую клетку
procedure TMyFifteen.Move(CellCol,CellRow: integer);
// cx,cy - клетка, по которой игрок сделал щелчок
var
  r: integer; // выбор игрока
begin
  // ѕроверка возможности обмена
  // ≈сли обмен невозможен, то осуществл€етс€ выход из процедуры
  if not ((abs(CellCol-EmptCol) = 1) and (CellRow-EmptRow = 0) or (abs(CellRow-EmptRow) = 1) and (CellCol-EmptCol = 0)) then exit;
  // ≈сли обмен возможен мен€ем кост€шку и пустую клетку местами
  // ќбмен. ѕереместим кост€шку из x,y в ex,ey
  Field[EmptRow,EmptCol] := Field[CellRow,CellCol];
  Field[CellRow,CellCol] := 0;
  EmptCol:=CellCol;
  EmptRow:=CellRow;
  // отрисовать поле
  ShowField;
  if Finish then
  begin
    ShowMessage('ѕоздравл€ем! ¬ы решили п€тнашки '+IntToStr(RowCount)+'x'+IntToStr(ColCount)+' за : ''xxx¬рем€xxx''');
    {r := MessageDlg('÷ель достигнута!'+ #13+'≈ще раз?',mtInformation,[mbYes,mbNo],0);
    if r = mrNo then
      Close // завершить работу программы
    else
      NewGame;}
    NewGame;
  end;
end;

// щелчок в клетке
procedure TMyFifteen.FormMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
var
  CellCol,CellRow: integer; // координаты клетки
begin
  // преобразуем координаты мыши в координаты клетки
  CellCol := Trunc(X / ColSize);
  CellRow := Trunc(Y / RowSize);
  Move(CellCol,CellRow);
end;

// выводит игровое поле
procedure TMyFifteen.ShowField;
var
  i,j: integer;
  x,y: integer; // x,y - координаты вывода текста в клетке
  TheRect: TRect;
begin


  with Canvas do
  begin
    if ParentColor then
    begin
      Brush.Color:=Parent.Brush.Color;
    end;
    Brush.Color:=clWhite;
    FillRect(ClientRect);
  end;
  //Canvas.CopyRect(ClientRect, Canvas, ClientRect);




  // сетка: вертикальные линии
  for i:= 1 to ColCount - 1 do
  begin
    Canvas.MoveTo(i*ColSize,0);
    Canvas.LineTo(i*ColSize,ClientHeight);
  end;
  // сетка: горизонтальные линии
  for i:= 1 to RowCount - 1 do
  begin
    Canvas.MoveTo(0,i*RowSize);
    Canvas.LineTo(ClientWidth,i*RowSize);
  end;

  // содержимое клеток
  // x,y - координаты вывода текста
  for i:= 0 to RowCount-1 do
  begin
    for j:=0 to ColCount-1 do
    begin
      x:= j*ColSize + (ColSize - Canvas.TextWidth(IntToStr(Field[i,j]))) div 2;  // ÷ентр клетки - ширина
      y:=i*RowSize + (RowSize - Canvas.TextHeight(IntToStr(Field[i,j]))) div 2;
      if Field[i,j] <> 0 then
        Canvas.TextOut(x,y,IntToStr(Field[i,j]))
      else
      begin
        x:= j*ColSize + (ColSize - Canvas.TextWidth('      ')) div 2;  // ÷ентр клетки - ширина
        y:=i*RowSize + (RowSize - Canvas.TextHeight('      ')) div 2; //«аменить на боллее
        Canvas.TextOut(x,y,'      '); //практичный способ Ќапример ресуетс€ квадрат
      end;
    end;
  end;
end;

// "перемешивает" фишки
procedure TMyFifteen.Mixer;
var
  x1,y1: integer; // пуста€ клетка
  x2,y2: integer; // эту переместить в пустую
  d: integer;     // направление, относительно пустой
  i: integer;
begin
  x1:=ColCount-1;
  y1:=RowCount-1;
  randomize;
  for i:= 0 to 5 do
  begin
    repeat
      x2:=x1;
      y2:=y1;
      d:=random(4)+1;
      case d of
        1: dec(x2);
        2: inc(x2);
        3: dec(y2);
        4: inc(y2);
      end;
    until (x2>=0) and (x2<=ColCount-1) and (y2>= 0) and (y2<=RowCount-1);
    // здесь определили фишку, которую
    // надо переместить в пустую клетку
    Field[y1,x1] := Field[y2,x2];
    Field[y2,x2] := 0;
    x1:=x2;
    y1:=y2;
  end;
  // запомним координаты пустой клетки
  EmptCol:= x1;
  EmptRow:= y1;
end;

// обработка событи€ OnCreate
{procedure TForm1.FormCreate(Sender: TObject);
begin
  ClientWidth := ColSize * ColCount;
  ClientHeight := RowSize * RowCount;
  Canvas.Font.Name := 'Times New Roman';
  Canvas.Font.Size := RowSize div 3;
  NewGame;
end;}

{// обработка событи€ OnPaint
procedure TForm1.FormPaint(Sender: TObject);
begin
  ShowField;
end;}



procedure Register;
begin
   RegisterComponents('FifteenGame', [TMyFifteen]);
end;

end.
